[core]
  editor = "<%= File.expand_path('~/.bin/edit') %>"
  excludesfile = ~/.gitignore_global
  safecrlf = warn
  autocrlf = input

[alias]
  st = status -s -b
  di = diff
  co = checkout
  ci = commit
  cp = cherry-pick
  br = branch
  l = log --oneline --decorate --graph
  ll = log --pretty=medium --decorate --graph --stat
  hist = log --pretty=format:\"%C(yellow bold)%h%Creset %C(red)%ad%Creset | %s%C(green bold)%d%Creset %C(blue)[%an]%Creset\" --graph --date=short
  fixup = commit --amend -c HEAD
  timeline = log --graph --branches --pretty=oneline --decorate
  untracked-files = ls-files -o --exclude-standard
  ignored-files = ls-files --others -i --exclude-standard
  modified-files = ls-files -m
  unstage = reset HEAD
  bl = blame -C
  amend = commit --amend --reuse-message=HEAD
  new = !git init && git symbolic-ref HEAD refs/heads/main

[color]
  status = auto
  diff = auto
  branch = auto
  interactive = auto
  ui = true

[color "branch"]
  current = red reverse
  local = blue
  remote = green

[color "diff"]
  meta = yellow
  frag = magenta
  old = red bold
  new = green
  plain = white
  commit = yellow bold
  whitespace = red reverse

[color "status"]
  added = blue
  changed = yellow
  untracked = magenta

[commit]
  template = ~/.gitmessage

[pull]
  rebase = false

[push]
  default = tracking

[merge]
  tool = opendiff

[init]
  templateDir = ~/.config/git/template/

[includeIf "gitdir:<%= print("Glob matching code directory for personal git config (e.g. ~/code/personal/**): "); STDOUT.flush; STDIN.gets.chomp.sub(/\/\z/, '') %>/"]
  path = .gitconfig-personal

[includeIf "gitdir:<%= print("Glob matching code directory for work git config (e.g. ~/code/work/**): "); STDOUT.flush; STDIN.gets.chomp.sub(/\/\z/, '') %>/"]
  path = .gitconfig-work
